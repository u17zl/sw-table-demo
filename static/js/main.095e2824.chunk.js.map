{"version":3,"sources":["store/reducers/detailReducer.ts","store/actions/actionTypes.ts","store/reducers/tableReducer.ts","store/index.ts","utils/stripHttps.ts","store/actions/tableActions.ts","utils/fetchFilms.ts","store/actions/detailActions.ts","components/Table.tsx","components/TableDetail.tsx","theme/palette.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableRow.ts","theme/index.ts","utils/axiosSettings.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["initState","payload","name","height","mass","birthYear","gender","list","film_list","isFetching","detailReducer","state","type","tableReducer","AllReducers","combineReducers","detail","data","middleware","applyMiddleware","thunk","store","createStore","compose","stripHttp","url","slice","fetchFilms","a","name_list","fetch_list","i","length","push","Axios","get","stripHttps","all","then","res","map","item","title","fetch_table","dispatch","console","log","fetch_films","films","catch","err","useStyles","makeStyles","theme","root","table","minWidth","maxWidth","loading","display","justifyContent","alignItems","margin","tablePagi","padding","spacing","pagiButton","marginLeft","connect","fetchTable","fetchDetail","pagiTable","props","classes","useEffect","Typography","className","variant","Paper","Table","size","aria-label","CircularProgress","style","TableHead","TableRow","TableCell","align","TableBody","results","row","hover","key","onClick","component","scope","Grid","container","justify","previous","Button","color","startIcon","next","endIcon","minHeight","marginTop","chips","birth_year","Chip","label","black","white","primary","contrastText","dark","main","light","secondary","background","default","divider","colors","grey","MuiTableHead","backgroundColor","MuiTableRow","verticalAlign","palette","cursor","createMuiTheme","overrides","axios","defaults","baseURL","timeout","width","App","ThemeProvider","elevation","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.095e2824.chunk.js","sourcesContent":["import { FETCH_DETAIL, DETAIL_FETCHING } from \"../actions/actionTypes\";\r\n\r\nconst initState = {\r\n  payload: {\r\n    name: \"\",\r\n    height: \"\",\r\n    mass: \"\",\r\n    birthYear: \"\",\r\n    gender: \"\",\r\n    list: [],\r\n    film_list: []\r\n  },\r\n  isFetching: false\r\n};\r\n\r\nconst detailReducer = (\r\n  state = initState,\r\n  { type, payload }: { type: string; payload: any }\r\n) => {\r\n  switch (type) {\r\n    case DETAIL_FETCHING:\r\n      return { ...state, isFetching: true };\r\n    case FETCH_DETAIL:\r\n      return { ...state, isFetching: false, payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default detailReducer;\r\n","export const FETCH_TABLE = \"FETCH_TABLE\";\r\nexport const FETCH_DETAIL = \"FETCH_DETAIL\";\r\nexport const PAGI_TABLE = \"PAGI_TABLE\";\r\nexport const TABLE_FETCHING = \"TABLE_FETCHING\";\r\nexport const DETAIL_FETCHING = \"DETAIL_FETCHING\";\r\n","import {\r\n  FETCH_TABLE,\r\n  PAGI_TABLE,\r\n  TABLE_FETCHING\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initState: object = { isFetching: true };\r\n\r\nconst tableReducer = (\r\n  state = initState,\r\n  { type, payload }: { type: string; payload: any }\r\n) => {\r\n  switch (type) {\r\n    case TABLE_FETCHING:\r\n      return { ...state, isFetching: true };\r\n    case FETCH_TABLE:\r\n      return { ...state, isFetching: false, payload };\r\n    case PAGI_TABLE:\r\n      return { ...state, isFetching: false, payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tableReducer;\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport detailReducer from \"./reducers/detailReducer\";\r\nimport tableReducer from \"./reducers/tableReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst AllReducers = combineReducers({\r\n  detail: detailReducer,\r\n  data: tableReducer\r\n});\r\n\r\nconst InitialStates = {\r\n  detail: {\r\n    isFetching: false,\r\n    payload: {\r\n      name: \"\",\r\n      height: \"\",\r\n      mass: \"\",\r\n      birthYear: \"\",\r\n      gender: \"\",\r\n      list: [],\r\n      film_list: []\r\n    }\r\n  },\r\n  data: { isFetching: true }\r\n};\r\n\r\nconst middleware = [applyMiddleware(thunk)];\r\n\r\nif (\r\n  process.env.NODE_ENV !== \"production\" &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  middleware.push((window as any).__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\nconst store = createStore(AllReducers, InitialStates, compose(...middleware));\r\n\r\nexport default store;\r\n","export default function stripHttp(url: string): string {\r\n  return url.slice(7);\r\n}\r\n","import Axios from \"axios\";\r\nimport { FETCH_TABLE, TABLE_FETCHING, PAGI_TABLE } from \"./actionTypes\";\r\nimport stripHttps from \"../../utils/stripHttps\";\r\n\r\nexport const fetchTable = () => (dispatch: any) => {\r\n  dispatch({ type: TABLE_FETCHING });\r\n\r\n  Axios.get(\"/swapi.co/api/people\")\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({ type: FETCH_TABLE, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const pagiTable = (url: string) => (dispatch: any) => {\r\n  dispatch({ type: TABLE_FETCHING });\r\n\r\n  Axios.get(stripHttps(url))\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({ type: PAGI_TABLE, payload: res.data });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import Axios from \"axios\";\r\nimport stripHttps from \"./stripHttps\";\r\n\r\nexport default async function fetchFilms(list: string[]) {\r\n  let name_list: string[] = [];\r\n  let fetch_list: any[] = [];\r\n\r\n  for (let i = 0; i < list.length; i++) {\r\n    fetch_list.push(Axios.get(stripHttps(list[i])));\r\n  }\r\n\r\n  await Axios.all(fetch_list).then(res => {\r\n    res.map((item: any) => {\r\n      name_list.push(item.data.title);\r\n    });\r\n  });\r\n  return name_list;\r\n}\r\n","import Axios from \"axios\";\r\nimport { FETCH_DETAIL, DETAIL_FETCHING } from \"./actionTypes\";\r\nimport fetch_films from \"../../utils/fetchFilms\";\r\nimport stripHttps from \"../../utils/stripHttps\";\r\n\r\nconst fetch_table = (url: string) => (dispatch: any) => {\r\n  dispatch({ type: DETAIL_FETCHING });\r\n\r\n  Axios.get(stripHttps(url))\r\n    .then(async res => {\r\n      console.log(res);\r\n      const film_list = await fetch_films(res.data.films);\r\n      dispatch({\r\n        type: FETCH_DETAIL,\r\n        payload: { ...res.data, film_list: film_list }\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport default fetch_table;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport KeyboardArrowLeftIcon from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nimport { fetchTable, pagiTable } from \"../store/actions/tableActions\";\r\nimport fetchDetail from \"../store/actions/detailActions\";\r\n\r\nexport interface IProps {}\r\n\r\nexport interface ITableStateProps {\r\n  data: object[];\r\n  isFetching: Boolean;\r\n}\r\n\r\nexport interface ITableDispatchProps {\r\n  fetchTable: () => Promise<any>;\r\n  fetchDetail: (input: string) => Promise<any>;\r\n  pagiTable: (url: string) => Promise<any>;\r\n}\r\n\r\nexport interface Itable {\r\n  name: string;\r\n  height: string;\r\n  mass: string;\r\n  url: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    root: {},\r\n    table: {\r\n      minWidth: 650,\r\n      maxWidth: 800\r\n    },\r\n    loading: {\r\n      height: 403,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    },\r\n    title: {\r\n      margin: \"10px auto 10px auto\"\r\n    },\r\n    tablePagi: {\r\n      padding: theme.spacing(1)\r\n    },\r\n    pagiButton: {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  };\r\n});\r\n\r\nconst SWTable = (props: any) => {\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    props.fetchTable();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <Typography className={classes.title} variant=\"h4\">\r\n        Star Wars Table\r\n      </Typography>\r\n      <Paper>\r\n        <Table\r\n          size={\"small\"}\r\n          className={classes.table}\r\n          aria-label=\"simple table\"\r\n        >\r\n          {props.isFetching ? (\r\n            <div className={classes.loading}>\r\n              <CircularProgress />\r\n              <span style={{ marginLeft: 10 }}>loading...</span>\r\n            </div>\r\n          ) : (\r\n            <Fragment>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    <b>Name</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <b>Height</b>\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <b>Mass</b>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.data.payload.results.map((row: Itable) => (\r\n                  <TableRow\r\n                    hover\r\n                    key={row.url}\r\n                    onClick={() => props.fetchDetail(row.url)}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.name}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.height}\r\n                    </TableCell>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.mass}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Fragment>\r\n          )}\r\n        </Table>\r\n        <Grid container justify=\"flex-end\" alignItems=\"center\">\r\n          <Grid item className={classes.tablePagi}>\r\n            {props.isFetching ? null : (\r\n              <Fragment>\r\n                {props.data.payload.previous === null ? null : (\r\n                  <Button\r\n                    className={classes.pagiButton}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => props.pagiTable(props.data.payload.previous)}\r\n                    startIcon={<KeyboardArrowLeftIcon />}\r\n                  >\r\n                    <b>back</b>\r\n                  </Button>\r\n                )}\r\n                {props.data.payload.next === null ? null : (\r\n                  <Button\r\n                    className={classes.pagiButton}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => props.pagiTable(props.data.payload.next)}\r\n                    endIcon={<KeyboardArrowRightIcon />}\r\n                  >\r\n                    <b>next</b>\r\n                  </Button>\r\n                )}\r\n              </Fragment>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any): ITableStateProps => ({\r\n  data: state.data,\r\n  isFetching: state.data.isFetching\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any): ITableDispatchProps => ({\r\n  fetchTable: () => dispatch(fetchTable()),\r\n  fetchDetail: (url: string) => dispatch(fetchDetail(url)),\r\n  pagiTable: (url: string) => dispatch(pagiTable(url))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SWTable);\r\n","import React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport interface IProps {}\r\nexport interface ITableDispatchProps {}\r\nexport interface ITableStateProps {\r\n  name: string;\r\n  birth_year: string;\r\n  gender: string;\r\n  isFetching: Boolean;\r\n  list: string[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  return {\r\n    root: {\r\n      padding: theme.spacing(2),\r\n      minHeight: 167,\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    loading: {\r\n      height: 167,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    },\r\n    chips: {\r\n      margin: theme.spacing(0.5)\r\n    }\r\n  };\r\n});\r\n\r\nconst TableDetail = (props: any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      {props.isFetching ? (\r\n        <div className={classes.loading}>\r\n          <CircularProgress />\r\n          <span style={{ marginLeft: 10 }}>loading...</span>\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          <Typography variant=\"h5\">Details:</Typography>\r\n          <Typography>Name:{props.name}</Typography>\r\n          <Typography>Birth Year:{props.birth_year}</Typography>\r\n          <Typography>Gender:{props.gender}</Typography>\r\n          <Typography>List of Films:</Typography>\r\n          {props.list.map((item: string) => {\r\n            return (\r\n              <Chip\r\n                key={item}\r\n                className={classes.chips}\r\n                label={item}\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n              />\r\n            );\r\n          })}\r\n        </Fragment>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\nconst mapStateToProps = (state: any): ITableStateProps => ({\r\n  name: state.detail.payload.name,\r\n  birth_year: state.detail.payload.birth_year,\r\n  gender: state.detail.payload.gender,\r\n  list: state.detail.payload.film_list,\r\n  isFetching: state.detail.isFetching\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: ITableDispatchProps) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableDetail);\r\n","import { colors } from \"@material-ui/core\";\r\n\r\nconst white = \"#FFFFFF\";\r\nconst black = \"#000000\";\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: \"#108f7f\",\r\n    main: \"#18cdb6\",\r\n    light: \"#e7faf7\"\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: \"#b25a12\",\r\n    main: \"#ff811a\",\r\n    light: \"#ff9a47\"\r\n  },\r\n  background: {\r\n    default: \"#46d7c4\"\r\n  },\r\n  divider: colors.grey[500]\r\n};\r\n","import MuiTableHead from \"./MuiTableHead\";\nimport MuiTableRow from \"./MuiTableRow\";\n\nexport default {\n  MuiTableHead,\n  MuiTableRow\n};\n","export default {\n  root: {\n    backgroundColor: \"#f2f2f2\"\n  }\n};\n","import palette from \"../palette\";\n\nexport default {\n  root: {\n    color: \"inherit\",\n    display: \"table-row\",\n    verticalAlign: \"middle\",\n    \"&$hover\": {\n      \"&:hover\": {\n        backgroundColor: palette.primary.light,\n        cursor: \"pointer\"\n      }\n    }\n  }\n};\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nimport palette from \"./palette\";\r\nimport overrides from \"./overrides/\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  overrides\r\n});\r\n\r\nexport default theme;\r\n","import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://cors-anywhere.herokuapp.com\";\r\naxios.defaults.timeout = 20000;\r\n","import React from \"react\";\nimport \"./assets/styles/App.scss\";\nimport { Theme, makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Table, TableDetail } from \"./components\";\nimport theme from \"./theme\";\nimport \"./utils/axiosSettings\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    root: {\n      padding: theme.spacing(2)\n    },\n    container: {\n      width: \"100vw\",\n      height: \"100vh\"\n    }\n  };\n});\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid\n        container\n        className={classes.container}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Paper elevation={3} className={classes.root}>\n            <Table />\n            <TableDetail />\n          </Paper>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App\";\nimport \"./assets/styles/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}